module Srem

// (pattern)|(pattern)
type OrPattern
    firstRegExp  $Any // List | OrPattern
    secondRegExp List

attach OrPattern to Pattern
    def patternMatch?(string String, pattern OrPattern, write charIndex Int, write namedStrings Map, isResultNeeded Bool) <>MString
        do
            const matchedString <>MString = string.patternMatch?(pattern.firstRegExp~(), charIndex, namedStrings, isResultNeeded)
            if !matchedString.nothing?()
                return matchedString
        return string.patternMatch?(pattern.secondRegExp~(), charIndex, namedStrings, isResultNeeded)
